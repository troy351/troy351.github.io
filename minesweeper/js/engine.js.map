{"version":3,"sources":["src/engine.js"],"names":[],"mappings":"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","file":"engine.js","sourcesContent":["import _ from 'js/underscore.min';\nimport Block from 'js/block';\nimport Sound from 'js/sound';\n\nexport default class MineSweeper {\n    constructor(options) {\n        this.options = options;\n\n        this._initGame();\n        this._initMap();\n        this._startGame();\n    }\n\n    _initGame() {\n        this.gameArea = document.getElementById(this.options.gameArea);\n\n        this.difficultySeletor = document.createElement('form');\n        this.difficultySeletor.innerHTML = '<input type=\"button\" name=\"easy\" value=\"easy\"><input type=\"button\" name=\"normal\" value=\"normal\"><input type=\"button\" name=\"hard\" value=\"hard\">';\n        this.gameArea.appendChild(this.difficultySeletor);\n\n        this.difficultySeletor.addEventListener('click', (event)=> {\n            if (event.srcElement.nodeName === 'INPUT') {\n                this.setDifficulty(event.srcElement.getAttribute('name'));\n            }\n        });\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.innerText = 'Your browser does not support canvas, please upgrade your browser.';\n        this.gameArea.appendChild(this.canvas);\n\n        Block.size = this.options.blockSize;\n        Block.ctx = this.canvas.getContext('2d');\n\n        // window prevent context menu\n        document.body.addEventListener('contextmenu', function (event) {\n            event.preventDefault();\n        });\n    }\n\n    _initMap() {\n        this.gameArea.style.width = this.options.blockSize * this.options.columns + 'px';\n        // attention: do not use style.width && style.height\n        this.canvas.width = this.options.blockSize * this.options.columns;\n        this.canvas.height = this.options.blockSize * this.options.rows;\n\n        this.map = [];\n        for (let i = 0; i < this.options.rows; i++) {\n            this.map[i] = [];\n            for (let j = 0; j < this.options.columns; j++) {\n                this.map[i][j] = new Block('cover', 0, i, j);\n                this.map[i][j].draw();\n            }\n        }\n    }\n\n\n    _updateMap(button, method, coor) {\n        // for r & down\n        if (button === 'r') {\n            switch (this.map[coor.i][coor.j].type) {\n                case 'cover':\n                    this.map[coor.i][coor.j].type = 'flag';\n                    break;\n                case 'flag':\n                    this.map[coor.i][coor.j].type = 'question';\n                    break;\n                case 'question':\n                    this.map[coor.i][coor.j].type = 'cover';\n                    break;\n            }\n        }\n        // for l & up\n        if (button === 'l' && method === 'up' && coor !== false) {\n            if (this.map[coor.i][coor.j].number === -1) {\n                this._gameOver();\n            } else if (this.map[coor.i][coor.j].number === 0) {\n                this._expandMap(coor);\n            } else {\n                this.map[coor.i][coor.j].type = 'number';\n            }\n        }\n        // for lr & up, do nothing\n\n        // for l/lr & down/move, and updateframe\n        const updateFrame = ()=> {\n            for (let i = 0; i < this.options.rows; i++) {\n                for (let j = 0; j < this.options.columns; j++) {\n                    if (button === 'lr' && (method === 'down' || method === 'move')) {\n                        // for lr & down/move\n                        if (Math.abs(coor.i - i) < 2 && Math.abs(coor.j - j) < 2) {\n                            this.map[i][j].draw(true);\n                        } else {\n                            this.map[i][j].draw(false);\n                        }\n                    } else if (button === 'l' && (method === 'down' || method === 'move')) {\n                        // for l & down/move\n                        if (i === coor.i && j === coor.j) {\n                            this.map[i][j].draw(true);\n                        } else {\n                            this.map[i][j].draw(false);\n                        }\n                    } else {\n                        // for others\n                        this.map[i][j].draw(false);\n                    }\n                }\n            }\n        }\n\n        window.requestAnimationFrame(updateFrame);\n    }\n\n    _expandMap(coor) {\n    }\n\n    _startGame() {\n        const timeGap = 50;\n        let lastClickButton = -1;\n        let lastClickTime = 0;\n        let timer = null;\n\n        const getBlockPosition = (x, y)=> {\n            const j = Math.floor(x / this.options.blockSize);\n            const i = Math.floor(y / this.options.blockSize);\n            if (i < this.options.rows && i >= 0 && j < this.options.columns && j >= 0) {\n                return {i: i, j: j};\n            } else {\n                return false;\n            }\n        };\n\n        const mouseDown = (event)=> {\n            const coor = getBlockPosition(event.offsetX, event.offsetY);\n            let currentButton = null;\n            if (event.button + lastClickButton === 2 && Date.now() - lastClickTime < timeGap) {\n                // left && right click\n                clearTimeout(timer);\n                currentButton = 'lr';\n                this._updateMap(currentButton, 'down', coor);\n            } else if (event.button === 0) {\n                // left click\n                timer = setTimeout(()=> {\n                    currentButton = 'l';\n                    this._updateMap(currentButton, 'down', coor);\n                }, timeGap)\n            } else if (event.button === 2) {\n                // right click\n                timer = setTimeout(()=> {\n                    currentButton = 'r';\n                    this._updateMap(currentButton, 'down', coor);\n                }, timeGap)\n            }\n\n            lastClickTime = Date.now();\n            lastClickButton = event.button;\n\n            const mouseMove = (event)=> {\n                console.log('move')\n                const coor = getBlockPosition(event.offsetX, event.offsetY);\n                if (currentButton === 'l' || currentButton === 'lr') {\n                    this._updateMap(currentButton, 'move', coor);\n                }\n            };\n\n            const mouseUp = (event)=> {\n                const coor = getBlockPosition(event.offsetX, event.offsetY);\n                if (currentButton === 'l' || currentButton === 'lr') {\n                    this._updateMap(currentButton, 'up', coor);\n                }\n\n                window.removeEventListener('mousemove', mouseMove);\n                window.removeEventListener('mouseup', mouseUp);\n            };\n\n            window.addEventListener('mousemove', mouseMove);\n            window.addEventListener('mouseup', mouseUp);\n        };\n\n        this.canvas.addEventListener('mousedown', mouseDown);\n    }\n\n    _gameOver() {\n    }\n\n    setDifficulty(difficulty) {\n        switch (difficulty) {\n            case 'easy':\n                this.options.rows = 9;\n                this.options.columns = 9;\n                this.options.mineCount = 10;\n                break;\n            case 'normal':\n                this.options.rows = 16;\n                this.options.columns = 16;\n                this.options.mineCount = 40;\n                break;\n            case 'hard':\n                this.options.rows = 16;\n                this.options.columns = 30;\n                this.options.mineCount = 99;\n                break;\n            default:\n                console.error('minesweeper: no such difficulty');\n        }\n\n        this._initMap();\n    }\n\n    set options(_options) {\n        const options = {\n            gameArea: '',\n            rows: 9,\n            columns: 9,\n            mineCount: 10\n        };\n\n        for (let key in options) {\n            if (_options[key] !== undefined) {\n                options[key] = _options[key];\n            }\n        }\n        // max rows && colums && mines\n        if (options.rows > 30) {\n            options.rows = 30;\n        }\n        if (options.columns > 40) {\n            options.columns = 40;\n        }\n        if (options.rows * options.columns / 4 < options.mineCount) {\n            options.mineCount = Math.floor(options.rows * options.columns / 4);\n        }\n        // can not set by users\n        options.blockSize = 20;\n\n        this._options = options;\n    }\n\n    get options() {\n        return this._options;\n    }\n}"]}